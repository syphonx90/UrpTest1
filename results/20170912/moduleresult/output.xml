<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170912 06:42:29.846" generator="Robot 3.0.2 (Python 2.7.9 on win32)">
<suite source="C:\development\robot-scripts\urp\tests\Modules\Module1_create.robot" id="s1" name="Module1 create">
<test id="s1-t1" name="Read SQL from File">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>File Content: ${SQL_FILE}</arg>
</arguments>
<msg timestamp="20170912 06:42:30.376" level="INFO">File Content: </msg>
<status status="PASS" endtime="20170912 06:42:30.376" starttime="20170912 06:42:30.376"></status>
</kw>
<tags>
<tag>SQL from File</tag>
</tags>
<status status="PASS" endtime="20170912 06:42:30.376" critical="yes" starttime="20170912 06:42:30.376"></status>
</test>
<test id="s1-t2" name="LogIn">
<kw name="Open Browser" library="Selenium2Library">
<doc>Opens a new browser instance to given URL.</doc>
<arguments>
<arg>http://10.0.1.47:8080/urp/urp/</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20170912 06:42:30.376" level="INFO">Opening browser 'gc' to base url 'http://10.0.1.47:8080/urp/urp/'</msg>
<status status="PASS" endtime="20170912 06:42:38.253" starttime="20170912 06:42:30.376"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:42:43.260" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:42:43.260" starttime="20170912 06:42:38.255"></status>
</kw>
<kw name="Click Button" library="Selenium2Library">
<doc>Clicks a button identified by `locator`.</doc>
<arguments>
<arg>xpath=//*[@id="show_login_btn"]</arg>
</arguments>
<msg timestamp="20170912 06:42:43.260" level="INFO">Clicking button 'xpath=//*[@id="show_login_btn"]'.</msg>
<status status="PASS" endtime="20170912 06:42:43.553" starttime="20170912 06:42:43.260"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:42:48.559" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:42:48.559" starttime="20170912 06:42:43.554"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>xpath=//*[@id="login_form"]/div[1]/div/div/input</arg>
</arguments>
<msg timestamp="20170912 06:42:48.559" level="INFO">Clicking element 'xpath=//*[@id="login_form"]/div[1]/div/div/input'.</msg>
<status status="PASS" endtime="20170912 06:42:48.752" starttime="20170912 06:42:48.559"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:42:53.765" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:42:53.765" starttime="20170912 06:42:48.753"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>identifier=login</arg>
<arg>${USER}</arg>
</arguments>
<msg timestamp="20170912 06:42:53.765" level="INFO">Typing text 'tmoleirinho@contextworld.com' into text field 'identifier=login'</msg>
<status status="PASS" endtime="20170912 06:42:54.382" starttime="20170912 06:42:53.765"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:42:59.393" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:42:59.393" starttime="20170912 06:42:54.382"></status>
</kw>
<kw name="Click Button" library="Selenium2Library">
<doc>Clicks a button identified by `locator`.</doc>
<arguments>
<arg>xpath=//*[@id="login_form"]/div[2]/div/div/input</arg>
</arguments>
<msg timestamp="20170912 06:42:59.393" level="INFO">Clicking button 'xpath=//*[@id="login_form"]/div[2]/div/div/input'.</msg>
<status status="PASS" endtime="20170912 06:42:59.619" starttime="20170912 06:42:59.393"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:43:04.626" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:43:04.626" starttime="20170912 06:42:59.622"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>identifier=password</arg>
<arg>${PW}</arg>
</arguments>
<msg timestamp="20170912 06:43:04.626" level="INFO">Typing text 'context@2017' into text field 'identifier=password'</msg>
<status status="PASS" endtime="20170912 06:43:05.072" starttime="20170912 06:43:04.626"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:43:10.077" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:43:10.077" starttime="20170912 06:43:05.074"></status>
</kw>
<kw name="Click Button" library="Selenium2Library">
<doc>Clicks a button identified by `locator`.</doc>
<arguments>
<arg>Login</arg>
</arguments>
<msg timestamp="20170912 06:43:10.077" level="INFO">Clicking button 'Login'.</msg>
<status status="PASS" endtime="20170912 06:43:10.283" starttime="20170912 06:43:10.077"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:43:15.299" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:43:15.299" starttime="20170912 06:43:10.288"></status>
</kw>
<doc>This is the valid test for LogIn and LogOff with both correct user anad password</doc>
<status status="PASS" endtime="20170912 06:43:15.299" critical="yes" starttime="20170912 06:42:30.376"></status>
</test>
<test id="s1-t3" name="Create Module">
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>xpath=//*[@id="enw_menu"]/li[4]/a</arg>
</arguments>
<msg timestamp="20170912 06:43:15.299" level="INFO">Clicking element 'xpath=//*[@id="enw_menu"]/li[4]/a'.</msg>
<status status="PASS" endtime="20170912 06:43:15.521" starttime="20170912 06:43:15.299"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:43:20.532" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:43:20.532" starttime="20170912 06:43:15.524"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>xpath=//*[@id="enw_menu"]/li[4]/ul/li[1]/a</arg>
</arguments>
<msg timestamp="20170912 06:43:20.532" level="INFO">Clicking element 'xpath=//*[@id="enw_menu"]/li[4]/ul/li[1]/a'.</msg>
<status status="PASS" endtime="20170912 06:43:22.133" starttime="20170912 06:43:20.532"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:43:27.163" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:43:27.163" starttime="20170912 06:43:22.147"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>xpath=//*[@id="new-module-btn"]</arg>
</arguments>
<msg timestamp="20170912 06:43:27.163" level="INFO">Clicking element 'xpath=//*[@id="new-module-btn"]'.</msg>
<status status="PASS" endtime="20170912 06:43:28.287" starttime="20170912 06:43:27.163"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:43:33.302" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:43:33.302" starttime="20170912 06:43:28.288"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>identifier=module_name</arg>
<arg>${MODULE1}</arg>
</arguments>
<msg timestamp="20170912 06:43:33.302" level="INFO">Typing text 'TestingModule1' into text field 'identifier=module_name'</msg>
<status status="PASS" endtime="20170912 06:43:34.068" starttime="20170912 06:43:33.302"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:43:39.075" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:43:39.075" starttime="20170912 06:43:34.070"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>xpath=//*[@id="folder_id"]</arg>
</arguments>
<msg timestamp="20170912 06:43:39.075" level="INFO">Clicking element 'xpath=//*[@id="folder_id"]'.</msg>
<status status="PASS" endtime="20170912 06:43:39.375" starttime="20170912 06:43:39.075"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:43:44.385" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:43:44.385" starttime="20170912 06:43:39.377"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>xpath=.//*[@id='folder_id']/option[11]</arg>
</arguments>
<msg timestamp="20170912 06:43:44.385" level="INFO">Clicking element 'xpath=.//*[@id='folder_id']/option[11]'.</msg>
<status status="PASS" endtime="20170912 06:43:44.549" starttime="20170912 06:43:44.385"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:43:49.564" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:43:49.564" starttime="20170912 06:43:44.551"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>identifier=description</arg>
<arg>${DESCRIPTION1}</arg>
</arguments>
<msg timestamp="20170912 06:43:49.564" level="INFO">Typing text 'Module 1 for Automated Testing' into text field 'identifier=description'</msg>
<status status="PASS" endtime="20170912 06:43:50.033" starttime="20170912 06:43:49.564"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:43:55.041" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:43:55.041" starttime="20170912 06:43:50.034"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>xpath=.//*[@id='code']</arg>
</arguments>
<msg timestamp="20170912 06:43:55.041" level="INFO">Clicking element 'xpath=.//*[@id='code']'.</msg>
<status status="PASS" endtime="20170912 06:43:55.254" starttime="20170912 06:43:55.041"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:44:00.271" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:44:00.271" starttime="20170912 06:43:55.256"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>resources\\01.txt</arg>
</arguments>
<assign>
<var>${read_FILE}</var>
</assign>
<msg timestamp="20170912 06:44:00.271" html="yes" level="INFO">Getting file '&lt;a href="file://C:\development\robot-scripts\urp\resources\01.txt"&gt;C:\development\robot-scripts\urp\resources\01.txt&lt;/a&gt;'.</msg>
<msg timestamp="20170912 06:44:00.271" level="INFO">${read_FILE} = -- create first table used for SO and SO QC
--DROP FUNCTION IF EXISTS pg_temp.so_extraction_standard (varchar, varchar);
CREATE OR REPLACE FUNCTION pg_temp.so_extraction_standard (intel_schema varchar...</msg>
<status status="PASS" endtime="20170912 06:44:00.271" starttime="20170912 06:44:00.271"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:44:05.273" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:44:05.273" starttime="20170912 06:44:00.271"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>xpath=.//*[@id='code']</arg>
<arg>${read_FILE}</arg>
</arguments>
<msg timestamp="20170912 06:44:05.273" level="INFO">Typing text '-- create first table used for SO and SO QC
--DROP FUNCTION IF EXISTS pg_temp.so_extraction_standard (varchar, varchar);
CREATE OR REPLACE FUNCTION pg_temp.so_extraction_standard (intel_schema varchar, bplist varchar) returns character varying as
$BODY$ 

DECLARE
return_query varchar;
startdate varchar;
enddate varchar;

BEGIN
-- get dates from report_dates table
EXECUTE 'SELECT start_date FROM ' || intel_schema || '.report_dates limit 1;'
    INTO startdate;
EXECUTE 'SELECT end_date FROM ' || intel_schema || '.report_dates limit 1;'
    INTO enddate;

    return_query  = '
    
        -- sales out extraction and filtering from PEx
        drop table if exists ' || intel_schema || '.so_step1_standard;
        CREATE TABLE ' || intel_schema || '.so_step1_standard as
        SELECT
            year,
            month,
            country_id,
            country_name,
            country_standard as intel_country_code,
            intel_cpu_name,
            intel_form_factor AS form_factor,
            vendor_standard as oem,
            processor_model,
            company_name,
            oem_model_number,
            intel_form_factor,
            intel_form_factor AS customer_form_factor,
            operating_system_intel,
            intel_screen_size,
            --tio,
            CASE WHEN product_category_standard IN (''Desktop'', ''Notebook'') THEN NULL
                WHEN tio = ''Yes'' THEN ''2in1''
                WHEN form_factor = ''All-in-One Desktop'' THEN ''AIO''
                ELSE ''None'' END AS tio,
            touchscreen,
            NULL::NUMERIC(12,2) AS spp,
            intel_week,
            mcp_flag,
            business_id,
            --------- For other reports
            source_part_no,
            ean_rf,
            --------- For separating into companies
            datasource_id,
            bpl_company,            
            --------- Aggregations
            SUM(day_units) AS total_quantity
        
        FROM ' || intel_schema ||'.pex_distributed_units
        WHERE TRUE
        AND datasource_id IN (' || bplist || ')
        AND day_date &amp;gt;= ''' || startdate || ''' --- ********** FILTER/VARIABLE
        AND day_date &amp;lt;= ''' || enddate || ''' --- ********** FILTER/VARIABLE
        AND day_date &amp;gt;= COALESCE(bpl_valid_from::DATE, ''1999-01-01''::DATE) --- ********** FILTER/VARIABLE
        AND day_date &amp;lt;= COALESCE(bpl_valid_to::DATE, NOW()::DATE) --- ********** FILTER/VARIABLE
        AND live
        AND processor_vendor = ''Intel'' -- processor_vendor: Intel Products
        GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25
        HAVING SUM(units) != 0
        ;
        ';

        EXECUTE return_query;
        
        EXECUTE 'UPDATE ' || intel_schema || '.so_step1_standard SET mcp_flag = NULL WHERE mcp_flag ilike ''no'';';
    -- Create table with the list of companies in the SO table for splitting the data  --- This and the splitting is a remnant from the old Intel reports that required to the csv's to be outputted with a special header and format
RETURN return_query;
END;
$BODY$ 
LANGUAGE plpgsql;

select pg_temp.so_extraction_standard('${schema_intel}', '${bps}');' into text field 'xpath=.//*[@id='code']'</msg>
<status status="PASS" endtime="20170912 06:44:39.848" starttime="20170912 06:44:05.273"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:44:44.854" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:44:44.854" starttime="20170912 06:44:39.851"></status>
</kw>
<status status="PASS" endtime="20170912 06:44:44.854" critical="yes" starttime="20170912 06:43:15.299"></status>
</test>
<test id="s1-t4" name="LogOff">
<kw name="Click Button" library="Selenium2Library">
<doc>Clicks a button identified by `locator`.</doc>
<arguments>
<arg>xpath=//*[@id="logout_form"]/button</arg>
</arguments>
<msg timestamp="20170912 06:44:44.854" level="INFO">Clicking button 'xpath=//*[@id="logout_form"]/button'.</msg>
<status status="PASS" endtime="20170912 06:44:45.150" starttime="20170912 06:44:44.854"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20170912 06:44:50.156" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170912 06:44:50.156" starttime="20170912 06:44:45.152"></status>
</kw>
<kw name="Close Browser" library="Selenium2Library">
<doc>Closes the current browser.</doc>
<status status="PASS" endtime="20170912 06:44:55.055" starttime="20170912 06:44:50.156"></status>
</kw>
<status status="PASS" endtime="20170912 06:44:55.055" critical="yes" starttime="20170912 06:44:44.854"></status>
</test>
<doc>This is some basic info about the whole suite</doc>
<status status="PASS" endtime="20170912 06:44:55.055" starttime="20170912 06:42:29.861"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">SQL from File</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Module1 create" pass="4">Module1 create</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
